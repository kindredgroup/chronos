# WHEN DEVELOPING LOCALLY, WE NEED TO ACCESS THE HOST NETWORK FROM K8S (FOR POSTGRES/KAFKA/ELASTIC/ETC)
LOCAL_HOST_IP=$(ifconfig en0 | grep inet | grep -v inet6 | awk '{print $2}')

# RUST version
RUST_VERSION=stable

# KAFKA
KAFKA_HOST="localhost\,$LOCAL_HOST_IP"
KAFKA_PORT="9094"
KAFKA_CLIENT_ID="chronos"
KAFKA_GROUP_ID="chronos"
KAFKA_IN_TOPIC="chronos.in"
KAFKA_OUT_TOPIC="chronos.out"
KAFKA_USERNAME=
KAFKA_PASSWORD=

# POSTGRES
# NB: `node-postgres` AND `node-pg-migrate` USE THE SAME ENVIRONMENT VARIABLES AS `libpq` TO CONNECT TO A POSTGRESQL SERVER
# NODE_PG_FORCE_NATIVE=1
PG_HOST=$LOCAL_HOST_IP
PG_PORT=5432
PG_USER=admin
PG_PASSWORD=admin
PG_DATABASE=chronos_db
PG_POOL_SIZE=50

# CONFIG
RUST_LOG=info

#APP
DELAY_TIME=0
RANDOMNESS_DELAY=100
MONITOR_DB_POLL=5
TIMING_ADVANCE=0
FAIL_DETECT_INTERVAL=500
MAX_RETRIES=3
PROCESSOR_DB_POLL=10

# TRACING
OTEL_SERVICE_NAME=chronos
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:4318/v1/traces