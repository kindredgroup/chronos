# WHEN DEVELOPING LOCALLY, WE NEED TO ACCESS THE HOST NETWORK FROM K8S (FOR POSTGRES/KAFKA/ELASTIC/ETC)
LOCAL_HOST_IP=$(ifconfig en0 | grep inet | grep -v inet6 | awk '{print $2}')

# RUST version
RUST_VERSION=stable

# KAFKA
KAFKA_HOST="localhost\,$LOCAL_HOST_IP"
KAFKA_PORT="9094"
KAFKA_CLIENT_ID="chronos"
KAFKA_GROUP_ID="chronos"
KAFKA_IN_TOPIC="chronos.in"
KAFKA_OUT_TOPIC="chronos.out"
KAFKA_USERNAME=
KAFKA_PASSWORD=

# KAFKA
# KAFKA_BROKERS=kb001.ksp-sbx.syd1.kc.thinkbig.local:9092,kb002.ksp-sbx.syd1.kc.thinkbig.local:9092,kb003.ksp-sbx.syd1.kc.thinkbig.local:9092,kb004.ksp-sbx.syd1.kc.thinkbig.local:9092,kb005.ksp-sbx.syd1.kc.thinkbig.local:9092
# KAFKA_CLIENT_ID="chronos-dev"
# KAFKA_GROUP_ID="chronos-dev"
# KAFKA_INPUT_TOPIC="sbx.ksp.bet.private.delay.in"
# KAFKA_OUTPUT_TOPIC="sbx.ksp.bet.private.delay.out"
# KAFKA_USERNAME="chimera-chronos"
# KAFKA_PASSWORD="Lbosg675kzTGkyXUw97r0Mt3gGiAfpa4"
# KAFKA_SASL_MECH="SCRAM-SHA-512"
# KAFKA_SEC_PROTOCOL="SASL_PLAINTEXT"

# POSTGRES
# NB: `node-postgres` AND `node-pg-migrate` USE THE SAME ENVIRONMENT VARIABLES AS `libpq` TO CONNECT TO A POSTGRESQL SERVER
# NODE_PG_FORCE_NATIVE=1
PG_HOST=$LOCAL_HOST_IP
PG_PORT=5432
PG_USER=admin
PG_PASSWORD=admin
PG_DATABASE=chronos_db
PG_POOL_SIZE=50

# POSTGRES
# NB: `node-postgres` AND `node-pg-migrate` USE THE SAME ENVIRONMENT VARIABLES AS `libpq` TO CONNECT TO A POSTGRESQL SERVER
# NODE_PG_FORCE_NATIVE=1
# PG_HOST=pgsql-ksp-sbx.unibet.com.au
# PG_PORT=5432
# PG_USER=chimera-chronos
# PG_PASSWORD=Npr0QfoU4TJNb3BH7fe21vfwhPTVwB4Q
# PG_DATABASE=chimera_chronos
# PG_POOL_SIZE=50


# CONFIG
RUST_LOG=info

#APP
DELAY_TIME=0
RANDOMNESS_DELAY=100
MONITOR_DB_POLL=5
TIMING_ADVANCE=0
FAIL_DETECT_INTERVAL=500
MAX_RETRIES=3
PROCESSOR_DB_POLL=10

# TRACING
OTEL_SERVICE_NAME=chronos
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:4318/v1/traces
